% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/vis_indicators.R
\name{vis_indicators}
\alias{vis_indicators}
\title{Shiny module server-like fun to display indicators on a data.table.}
\usage{
vis_indicators(input, output, session, data, col_id = NULL,
  keep_id = NULL, col_obs, col_fit, col_date = NULL,
  indicators = c("rmse", "mae", "mape", "mape_e"),
  labels = list(progress_data = "Préparation des données", no_data =
  "Pas de données", no_choice = "Aucun", idc_title =
  "Distribution des indicateurs", idc_aggr = "Colonne d'agrégation",
  idv_opt_discretiser = "Discrétiser ?", idv_choice_quantiles =
  "Choix des quantiles", idc_button = "Afficher le graphique", idc_progress
  = "Affichage des indicateurs", idc_plot_title = "Model's indicators",
  err_title = "Distribution des erreurs", err_aggr =
  "Colonne d'agrégation", err_type = "Choix du type d'erreur", err_button
  = "Afficher le graphique",      err_progress = "Affichage des boxplots",
  err_ylab = "Values", error_xlab = "erreur : ", tree_title =
  "Arbre de décision", tree_y = "Y", tree_x = "X", tree_minsplit =
  "Minsplit", tree_cp = "Complexité (cp)", tree_maj_cp = "Ajuster le cp",
  tree_maj_params = "Mettre à jour les paramètres", tree_run =
  "Mettre à jour l'arbre", tree_cp_modal_titre = "Mise à jour du CP",
  tree_cp_modal_min = "Slider minimum", tree_cp_modal_max =
  "Slider maximum", tree_cp_modal_step = "Slider step",
  tree_cp_modal_bouton = "Valider la mise à jour",      warning_var =
  "Selectionner au moins une variable explicative."))
}
\arguments{
\item{input}{shiny input}

\item{output}{shiny input}

\item{session}{shiny input}

\item{data}{\code{data.frame} / \code{data.table}. Table on which indicators will be computed.}

\item{col_id}{\code{character} (NULL). Column name for id values.}

\item{keep_id}{\code{character} (NULL). id values to keep in col_id.}

\item{col_obs}{\code{character}. Column name for observed values.}

\item{col_fit}{\code{character}. Column name for fitted values.}

\item{col_date}{\code{character} (NULL). Column name for date values.}

\item{indicators}{\code{characters}. Indicators to be computed, amongst: ("rmse", "mae", "mape", "mape_star").}

\item{labels}{\code{character}. Labels to modify displayed texts. See default in examples.}
}
\value{
shiny module.
}
\description{
Shiny module server-like fun to display indicators on a data.table.
}
\examples{
\dontrun{\donttest{

library(data.table)

data <- data.table(obs = runif(100, 1, 10))
data[, fit := obs + rnorm(100, 0, 10)]
data[, date := seq(as.POSIXct("2019-10-07 00:00:00 UTC", tz = "UTC"),
                   as.POSIXct("2019-10-11 03:00:00 UTC", tz = "UTC"), by = 60*60)]
data[, by_quali := factor(sample(rep(1:10, 10)))]
data[, by_quanti := runif(100, 1, 20)]

col_obs <- "obs"
col_fit <- "fit"
col_date = "date"
indicators <- c("rmse", "mae", "mape", "mape_e")

ui <- vis_indicators_UI("my_id")
server <- function(input, output, session) {
  callModule(vis_indicators, "my_id", data = reactive(data), 
             col_obs = col_obs,
             col_fit = col_fit,
             col_date = col_date,
             indicators = indicators,
             labels = list(
               "progress_data" = "Préparation des données",
               "no_data" = "Pas de données",
               "no_choice" = "Auckkskidfhlun",
               "idc_title" = "Distribution des indicateurs",
               "idc_aggr" = "Colonne d'agrégation",
               "idv_opt_discretiser" = "Discrétiser ?",
               "idv_choice_quantiles" = "Choix des quantiles",
               "idc_button" = "Afficher le graphique",
               "idc_progress" = "Affichage des indicateurs",
               "idc_plot_title" = "Model's indicators",
               "err_title" = "Distribution des erreurs", 
               "err_aggr" = "Colonne d'agrégation",
               "err_type" = "Choix du type d'erreur",
               "err_button" = "Afficher le graphique",
               "err_progress" = "Affichage des boxplots",
               "err_ylab" = "Values",
               "error_xlab" = "erreur : ",
               "tree_title" = "Arbre de décision",
               "tree_y" = "Y",
               "tree_x" = "X",
               "tree_minsplit" = "Minsplit",
               "tree_cp" = "Complexité (cp)",
               "tree_maj_cp" = "Ajuster le cp",
               "tree_maj_params" = "Mettre à jour les paramètres",
               "tree_run" = "Mettre à jour l'arbre",
               "tree_cp_modal_titre" = "Mise à jour du CP",
               "tree_cp_modal_min" = "Slider minimum",
               "tree_cp_modal_max" = "Slider maximum",
               "tree_cp_modal_step" = "Slider step",
               "tree_cp_modal_bouton" = "Valider la mise à jour",
               "warning_var" = "Selectionner au moins une variable explicative."))
}
shiny::shinyApp(ui = ui, server = server)

}}
}
